@page "/customer/add"
@page "/customer/edit/{id:int}"
@using PizzaShopApp.Models
@inject HttpClient Http
@inject NavigationManager NavigationManager
<h1>@Title User</h1>
<hr />
<EditForm Model="@customer" OnValidSubmit="SaveUser">
    <DataAnnotationsValidator />
    <div class="mb-3">
        <label for="Id" class="form-label">Id</label>
        <div class="col-md-4">
            <label class="form-control">@customer.Id.ToString()</label>
        </div>
    </div>
    <div class="mb-3">
        <label for="Username" class="form-label">Username</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="customer.Username" />
        </div>
        <ValidationMessage For="@(() => customer.Username)" />
    </div>
    <div class="mb-3">
        <label for="Firstname" class="form-label">First name</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="customer.Firstname" />
        </div>
        <ValidationMessage For="@(() => customer.Firstname)" />
    </div>
    <div class="mb-3">
        <label for="Lastname" class="form-label">Lastname</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="customer.Lastname" />
        </div>
        <ValidationMessage For="@(() => customer.Lastname)" />
    </div>
    <div class="form-group">
        <button type="submit" class="btn btn-primary">Save</button>
        <button class="btn btn-light" @onclick="Cancel">Cancel</button>
    </div>
</EditForm>

@code {
    [Parameter]
    public int Id { get; set; }
    private string Title = "Add";
    private CustomersModel customer = new CustomersModel();
    protected override async Task OnParametersSetAsync()
    {
        Http.BaseAddress = new Uri("https://localhost:7012/");
        if (Id != 0)
        {
            Title = "Edit";
            customer = await Http.GetFromJsonAsync<CustomersModel>($"api/Customer/{Id}");
        }
    }
    private async Task SaveUser()
    {
        if (customer.Id != 0)
        {
            await Http.PutAsJsonAsync("api/Customer", customer);
        }
        else
        {
            await Http.PostAsJsonAsync("api/Customer", customer);
        }
        Cancel();
    }
    private void Cancel()
    {
        NavigationManager.NavigateTo("/Customer");
    }
}